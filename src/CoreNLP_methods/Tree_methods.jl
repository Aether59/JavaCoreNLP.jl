#=============================================================================
edu.stanford.nlp.trees.Tree methods
https://nlp.stanford.edu/nlp/javadoc/javanlp/edu/stanford/nlp/trees/Tree.html

No-argument calls are built as follows--
jcall(A, B, C, D) where--
   A is a Tree and in practice.
   B is a key associated with the desired value.
   C is 'JString', the return type.
   D is '()'. These calls take no arguments.

For example, in,
   'jcall(tree, "depth", JString, ())'
the 'depth' key maps to a depth JString (the value).
=============================================================================#


#Converts parse tree to string in Penn Treebank format.
function treeToString(tree::JTree)
    return jcall(tree, "toString", JString, ())
end


#Returns the number of nodes the tree contains.
function size(tree::JTree)
    return jcall(tree, "size", JString, ())
end


#Finds the depth of the tree.
function depth(tree::JTree)
    return jcall(tree, "depth", JString, ())
end


#Returns an array of children for the current node.
function children(tree::JTree)
    return jcall(tree, "children", JString, ())
end


#Returns the Constituents generated by the parse tree.
function constituents(tree::JTree)
    return jcall(tree, "constituents", JString, ())
end


#Returns an iterator over all the nodes of the tree.
function iterator(tree::JTree)
    return jcall(tree, "iterator", JString, ())
end
